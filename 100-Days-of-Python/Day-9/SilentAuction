#from replit import clear
#HINT: You can call clear() to clear the output in the console.

""" My code: """

# # Import ASCII Art
# from art import logo
# print(logo)
# print("Welcome to the silent auction! \n")

# should_continue = True
# bid_dict = {}
# while should_continue == True:
#   name_input = input('What is your name? \n')
#   try:
#     bid_input = int(input('What is your bid? \n'))
#     bid_dict[name_input] = bid_input
#   except:
#     print('Please enter a number.')
#     clear()
#     continue

#   user_continue = input('Are there other bidders? Yes or No. \n')
#   if user_continue.lower() == 'no':
#     should_continue = False
#   elif user_continue.lower() == 'yes':
#     clear()
#     continue
#   else:
#     print("Invalid input.")
#     continue

# clear()
# winner = max(bid_dict, key=bid_dict.get)
# winner_bid = bid_dict[winner]

# print(f'The winner is {winner} with a bid of ${winner_bid}! Congratulations!\n')

# print('Psst, the bids were:')
# for x, y in bid_dict.items():
#   print(x,y)

"""
What I learned: 
1. This code won't work if two people have the same name because dictionaries do not allow
duplicate keys. I could fix this by implementing the instructor's code or perhaps creating
a list inside of the dictionary.
2. I could have created a function as practice. This isn't a large program but adding
functions in the future for duplicate code is good practice.
"""

"""Instructor's Code:"""

from art import logo
print(logo)

bids = {}
bidding_finished = False

def find_highest_bidder(bidding_record):
  highest_bid = 0
  winner = ""
  for bidder in bidding_record:
    bid_amount = bidding_record[bidder]
    if bid_amount > highest_bid:
      highest_bid = bid_amount
      winner = bidder
  print(f"The winner is {winner} with a bid of ${highest_bid}")


while not bidding_finished:
  name = input("what is your name?: ")
  price = int(input("What is your bid?: $"))
  bids[name] = price
  should_continue = input("Are there any other bidders? Type 'yes' or no'. ")
  if should_continue == "no":
    bidding_finished = True
    find_highest_bidder(bids)
  elif should_continue == "yes":
    clear()



  











